security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    kowalski:
                        password: $argon2id$v=19$m=65536,t=4,p=1$oy4t+ucCal4YagKmmihrkw$Q9NRaJ66vySC5ZKY6mzdExncRuokgwz8Kpqic8vFfRo
                        roles: 'ROLE_USER'
                    admin:
                        password: $argon2id$v=19$m=65536,t=4,p=1$VDnovH1qYbHvD+dG+9M2XA$Wz097GQo+02bGqJBh7mlQPQskX4xwo/+uJ7yF6iHLDk
                        roles: 'ROLE_ADMIN'
    encoders:
        Symfony\Component\Security\Core\User\User: auto

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            #anonymous: true

            http_basic: ~

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/firewall-test, roles: ROLE_ADMIN}
        - { path: ^/admin/add-user, roles: ROLE_ADMIN}
        - { path: ^/admin, roles: ROLE_ADMIN}
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_ADMIN: ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN